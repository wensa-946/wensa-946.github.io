import{_ as a,c as l,a2 as s,o as e}from"./chunks/framework.BQmytedh.js";const u=JSON.parse('{"title":"HTML_CSS","description":"","frontmatter":{},"headers":[],"relativePath":"其它/强化小册.md","filePath":"其它/强化小册.md","lastUpdated":1732722956000}'),n={name:"其它/强化小册.md"};function t(h,i,r,o,d,c){return e(),l("div",null,i[0]||(i[0]=[s(`<blockquote><p>在我老文面前是忘不掉的，反反复复，烂熟于心。</p><p>越是不起眼，我越是捡，一来抚平浮躁的心，心越急我就越慢; 二来让知识彻底炉火纯青，打通全身脉络。</p><p>强化小册主要是拿来梳理脉络的，很详细的内容我不再做过多描述，因为前面都能找到的。</p></blockquote><hr><h1 id="html-css" tabindex="-1">HTML_CSS <a class="header-anchor" href="#html-css" aria-label="Permalink to &quot;HTML_CSS&quot;">​</a></h1><h2 id="邂逅前端开发" tabindex="-1">邂逅前端开发 <a class="header-anchor" href="#邂逅前端开发" aria-label="Permalink to &quot;邂逅前端开发&quot;">​</a></h2><h3 id="_1-1-软件开发、软件开发体系" tabindex="-1">1.1. 软件开发、软件开发体系 <a class="header-anchor" href="#_1-1-软件开发、软件开发体系" aria-label="Permalink to &quot;1.1. 软件开发、软件开发体系&quot;">​</a></h3><h3 id="_1-2-完善的应用程序包括哪些" tabindex="-1">1.2. 完善的应用程序包括哪些 <a class="header-anchor" href="#_1-2-完善的应用程序包括哪些" aria-label="Permalink to &quot;1.2. 完善的应用程序包括哪些&quot;">​</a></h3><ul><li>服务器端</li><li>iOS端、Android端</li><li>Web端</li><li>桌面端（window mac os）</li></ul><blockquote><ul><li>软件和应用程序的区别</li><li>软件 包括操作系统及虚拟机、编程（语言）、算法、应用程序等，软件是应用程序的超集。</li><li>应用程序 是一种直接面向用户的软件。</li></ul></blockquote><h3 id="_1-3-前端开发的内容" tabindex="-1">1.3. 前端开发的内容 <a class="header-anchor" href="#_1-3-前端开发的内容" aria-label="Permalink to &quot;1.3. 前端开发的内容&quot;">​</a></h3><ul><li>前端开发的任务； <ul><li>web开发、小程序开发</li><li>移动端、桌面端（electron、vscode）、服务器开发（Node）</li></ul></li><li>前端开发的思维 数据驱动UI</li></ul><h3 id="_1-4-学习方法和学习建议" tabindex="-1">1.4. 学习方法和学习建议 <a class="header-anchor" href="#_1-4-学习方法和学习建议" aria-label="Permalink to &quot;1.4. 学习方法和学习建议&quot;">​</a></h3><ul><li>学习任何新的东西的，最好了解它的历史、局限性、本质；</li><li>知识进行分类： <ul><li>常用的知识：必须非常熟练；</li><li>不常用的知识：知道有他，知道在哪里查；</li></ul></li></ul><h2 id="邂逅web开发" tabindex="-1">邂逅Web开发 <a class="header-anchor" href="#邂逅web开发" aria-label="Permalink to &quot;邂逅Web开发&quot;">​</a></h2><h3 id="_2-1-电脑配置、推荐软件" tabindex="-1">2.1. 电脑配置、推荐软件 <a class="header-anchor" href="#_2-1-电脑配置、推荐软件" aria-label="Permalink to &quot;2.1. 电脑配置、推荐软件&quot;">​</a></h3><h3 id="_2-2-网站和网页的关系" tabindex="-1">2.2. 网站和网页的关系 <a class="header-anchor" href="#_2-2-网站和网页的关系" aria-label="Permalink to &quot;2.2. 网站和网页的关系&quot;">​</a></h3><h3 id="_2-3-网页的显示过程-重要" tabindex="-1">2.3. 网页的显示过程（重要） <a class="header-anchor" href="#_2-3-网页的显示过程-重要" aria-label="Permalink to &quot;2.3. 网页的显示过程（重要）&quot;">​</a></h3><ul><li>前端工程师：编写HTML/CSS/JS代码 -&gt; 打包发布到服务器作为静态资源</li><li>用户角度：在浏览器输入域名 -&gt; 浏览器发出静态资源请求 -&gt; DNS将域名转换为IP地址 -&gt; 浏览器找到服务器的IP地址，服务器返回静态资源给浏览器 -&gt; 浏览器解析和渲染静态资源，显示网页</li><li>服务器是什么？一台主机，存储着巨量信息 ⌈24h不关机（稳定运行）⌋ ⌈没有显示器⌋ ⌈一般装载Linux系统（如centos）⌋</li></ul><h3 id="_2-4-网页的组成部分" tabindex="-1">2.4. 网页的组成部分 <a class="header-anchor" href="#_2-4-网页的组成部分" aria-label="Permalink to &quot;2.4. 网页的组成部分&quot;">​</a></h3><ul><li>HTML：网页的结构</li><li>CSS：网页的样式（美化）</li><li>JavaScript：网页的交互（灵魂）</li></ul><h2 id="浏览器和浏览器内核" tabindex="-1">浏览器和浏览器内核 <a class="header-anchor" href="#浏览器和浏览器内核" aria-label="Permalink to &quot;浏览器和浏览器内核&quot;">​</a></h2><ul><li>核心部分浏览器内核：渲染引擎 <ul><li>浏览器内核又称浏览器渲染引擎，是浏览器的最核心部分。负责解析网页语法并渲染网页。</li></ul></li><li>常见的浏览器内核有 <ul><li>trident（三叉戟）---- IE浏览器、360安全浏览器、UC浏览器、搜狗高速浏览器、百度浏览器</li><li>gecko（壁虎） ---- Mozilla、Firefox</li><li>pestro -&gt; Blink ---- Opera</li><li>Webkit ---- Safari、360极速浏览器、搜狗高速浏览器、移动端浏览器</li><li>Webkit -&gt; Blink ----Chrome、Edge</li></ul></li></ul><h2 id="开发自己的第一个网页" tabindex="-1">开发自己的第一个网页 <a class="header-anchor" href="#开发自己的第一个网页" aria-label="Permalink to &quot;开发自己的第一个网页&quot;">​</a></h2><h3 id="_2-1-记事本开发网页" tabindex="-1">2.1. 记事本开发网页 <a class="header-anchor" href="#_2-1-记事本开发网页" aria-label="Permalink to &quot;2.1. 记事本开发网页&quot;">​</a></h3><h3 id="_2-2-对网页进行补充" tabindex="-1">2.2. 对网页进行补充 <a class="header-anchor" href="#_2-2-对网页进行补充" aria-label="Permalink to &quot;2.2. 对网页进行补充&quot;">​</a></h3><ul><li>增加标记 -&gt; 元素 -&gt; 浏览器 -&gt; 渲染对应的效果</li><li>增加网页的结构 <ul><li>html <ul><li>head <ul><li>title</li></ul></li><li>body <ul><li>h1</li><li>p</li><li>div</li><li>span</li></ul></li></ul></li></ul></li></ul><h3 id="_2-3-html语言" tabindex="-1">2.3. HTML语言 <a class="header-anchor" href="#_2-3-html语言" aria-label="Permalink to &quot;2.3. HTML语言&quot;">​</a></h3><ul><li>超文本标记语言 <ul><li>为什么表标记语言？</li><li>超文本：图片、音频、视频、超链接</li></ul></li></ul><h3 id="_2-4-开发工具vscode" tabindex="-1">2.4. 开发工具VSCode <a class="header-anchor" href="#_2-4-开发工具vscode" aria-label="Permalink to &quot;2.4. 开发工具VSCode&quot;">​</a></h3><ul><li>安装</li><li>安装插件</li><li>配置</li></ul><h3 id="_2-5-剖析元素结构" tabindex="-1">2.5. 剖析元素结构 <a class="header-anchor" href="#_2-5-剖析元素结构" aria-label="Permalink to &quot;2.5. 剖析元素结构&quot;">​</a></h3><ul><li>开始标签</li><li>结束标签</li><li>内容</li><li>属性</li><li>元素的嵌套</li></ul><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">单标签元素： &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">br</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">hr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">双标签元素： &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_2-6-html注释" tabindex="-1">2.6. HTML注释 <a class="header-anchor" href="#_2-6-html注释" aria-label="Permalink to &quot;2.6. HTML注释&quot;">​</a></h3><ul><li>理解注释的作用 <ul><li>帮助自己记忆代码思路</li><li>便于和他人协同开发</li><li>临时注释代码，方便调试</li><li>自己开发框架时，便于他人理解和学习</li></ul></li><li>HTML注释的编写方法 <ul><li>ctrl + /</li></ul></li></ul><h2 id="html结构" tabindex="-1">HTML结构 <a class="header-anchor" href="#html结构" aria-label="Permalink to &quot;HTML结构&quot;">​</a></h2><h3 id="_1-1-文档声明" tabindex="-1">1.1. 文档声明 <a class="header-anchor" href="#_1-1-文档声明" aria-label="Permalink to &quot;1.1. 文档声明&quot;">​</a></h3><h3 id="_1-2-html元素" tabindex="-1">1.2. html元素 <a class="header-anchor" href="#_1-2-html元素" aria-label="Permalink to &quot;1.2. html元素&quot;">​</a></h3><ul><li>lang</li></ul><h3 id="_1-3-head" tabindex="-1">1.3. head <a class="header-anchor" href="#_1-3-head" aria-label="Permalink to &quot;1.3. head&quot;">​</a></h3><ul><li>元数据(配置信息) <ul><li>meta -&gt; charset -&gt; utf-8</li><li>title -&gt; 标题</li></ul></li></ul><h2 id="body元素" tabindex="-1">body元素 <a class="header-anchor" href="#body元素" aria-label="Permalink to &quot;body元素&quot;">​</a></h2><h3 id="_2-1-h1-h6" tabindex="-1">2.1. h1~h6 <a class="header-anchor" href="#_2-1-h1-h6" aria-label="Permalink to &quot;2.1.  h1~h6&quot;">​</a></h3><ul><li>演练</li><li>区别</li></ul><h3 id="_2-2-p元素" tabindex="-1">2.2. p元素 <a class="header-anchor" href="#_2-2-p元素" aria-label="Permalink to &quot;2.2. p元素&quot;">​</a></h3><ul><li>演练</li><li>区分</li></ul><h3 id="_2-3-案例练习" tabindex="-1">2.3. 案例练习 <a class="header-anchor" href="#_2-3-案例练习" aria-label="Permalink to &quot;2.3. 案例练习&quot;">​</a></h3><h3 id="_2-4-img元素" tabindex="-1">2.4. img元素 <a class="header-anchor" href="#_2-4-img元素" aria-label="Permalink to &quot;2.4. img元素&quot;">​</a></h3><ul><li>两个属性 <ul><li>src</li><li>alt: 占位</li></ul></li><li>地址 <ul><li>网络地址</li><li>本地地址 <ul><li>绝对路径</li><li>相对路径</li></ul></li></ul></li></ul><h3 id="_2-5-a元素-anchor" tabindex="-1">2.5. a元素(anchor) <a class="header-anchor" href="#_2-5-a元素-anchor" aria-label="Permalink to &quot;2.5. a元素(anchor)&quot;">​</a></h3><ul><li>两个属性: <ul><li>href</li><li>target <ul><li>_self</li><li>_blank</li><li>_parent</li><li>_top</li></ul></li></ul></li><li>本页面的锚点链接</li><li>a元素和img元素</li></ul><h3 id="_2-6-iframe元素" tabindex="-1">2.6. iframe元素 <a class="header-anchor" href="#_2-6-iframe元素" aria-label="Permalink to &quot;2.6. iframe元素&quot;">​</a></h3><ul><li>嵌套网页</li><li>某些网页禁止嵌套(原理)</li><li>和a元素结合(target另外两个值)</li></ul><h3 id="_2-6-div-span" tabindex="-1">2.6. div/span <a class="header-anchor" href="#_2-6-div-span" aria-label="Permalink to &quot;2.6. div/span&quot;">​</a></h3><ul><li>历史</li><li>案例</li></ul><h3 id="_2-7-不常用元素" tabindex="-1">2.7. 不常用元素 <a class="header-anchor" href="#_2-7-不常用元素" aria-label="Permalink to &quot;2.7. 不常用元素&quot;">​</a></h3><ul><li>strong</li><li>i</li><li>code</li><li>br</li><li>...</li></ul><h3 id="_2-8-全局属性" tabindex="-1">2.8. 全局属性 <a class="header-anchor" href="#_2-8-全局属性" aria-label="Permalink to &quot;2.8. 全局属性&quot;">​</a></h3><ul><li>id: 唯一的标识符,在文档内必须要是唯一的</li><li>class: 一个以空格分割的元素的类名列表,它允许css,js通过类选择器(或者dom方法)选择和访问特定的元素</li><li>title: 包含表示与其所属元素相关信息的文本,可以呈现给用户看,不是必须</li><li>style: 是给元素添加样式</li></ul><h2 id="额外知识补充" tabindex="-1">额外知识补充 <a class="header-anchor" href="#额外知识补充" aria-label="Permalink to &quot;额外知识补充&quot;">​</a></h2><h3 id="_3-1-字符实体" tabindex="-1">3.1. 字符实体 <a class="header-anchor" href="#_3-1-字符实体" aria-label="Permalink to &quot;3.1. 字符实体&quot;">​</a></h3><ul><li>为什么需要字符实体;</li><li>三个:</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&amp;nbsp;</span></span>
<span class="line"><span>&amp;lt;</span></span>
<span class="line"><span>&amp;gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_3-2-url" tabindex="-1">3.2. URL <a class="header-anchor" href="#_3-2-url" aria-label="Permalink to &quot;3.2. URL&quot;">​</a></h3><ul><li>URL的格式: <ul><li>协议://主机:端口/路径/文件名?查询#片段id</li></ul></li><li>和URI的区别: <ul><li>URI:标志符</li><li>URL: 定位符(网络地址)</li></ul></li></ul><h3 id="_3-3-元素语义化" tabindex="-1">3.3. 元素语义化 <a class="header-anchor" href="#_3-3-元素语义化" aria-label="Permalink to &quot;3.3. 元素语义化&quot;">​</a></h3><ul><li>用正确的元素去做正确的事情</li></ul><h3 id="_3-4-seo优化" tabindex="-1">3.4. SEO优化 <a class="header-anchor" href="#_3-4-seo优化" aria-label="Permalink to &quot;3.4. SEO优化&quot;">​</a></h3><ul><li>SEO原理: 搜索引擎优化(Search Engine Optimization)，SEO通过了解搜索引擎的运行规则来调整网站，以提高网站的曝光度,以及网站的排名。</li><li>过程/流程(以Google为例) <ul><li><strong>抓取</strong>：Google 会使用名为“抓取工具”的自动程序搜索网络，以查找新网页或更新后的网页。Google 会将这些网页的地址（即网址）存储在一个大型列表中，以便日后查看。我们会通过许多不同的方法查找网页，但主要方法是跟踪我们已知的网页中的链接。</li><li><strong>编入索引</strong>：Google 会访问它通过抓取得知的网页，并会尝试分析每个网页的主题。Google 会分析网页中的内容、图片和视频文件，尝试了解网页的主题。这些信息存储在 Google 索引中，而 Google 索引是一个存储在海量计算机中的巨大数据库。</li><li><strong>呈现搜索结果</strong>：当用户在 Google 上进行搜索时，Google 会尝试确定最优质的搜索结果。“最佳”结果取决于许多因素，包括用户的位置、语言、设备（桌面设备或手机）以及先前用过的搜索查询。例如，在用户搜索“自行车维修店”后，Google 向巴黎用户显示的答案与向香港用户显示的答案有所不同。支付费用不能提高网页在 Google 搜索结果中的排名，网页排名是完全依靠算法完成的。</li></ul></li></ul><h3 id="_3-5-字符串编码" tabindex="-1">3.5. 字符串编码 <a class="header-anchor" href="#_3-5-字符串编码" aria-label="Permalink to &quot;3.5. 字符串编码&quot;">​</a></h3><ul><li>计算机的本质010101</li><li>历史: 计算机只认识0和1，但我们各个国家的人都需要在计算机上使用各自的文字，为了在计算机上也能表示、存储和处理像文字、符号等等之类的字符，就必须将这些字符转换成二进制。于是就出现了字符编码，字符编码将我们的自然语言编码成二进制给计算机看，然后再把这些二进制解码为自然语言给我们看。</li><li>编码/解码</li></ul><h2 id="邂逅css" tabindex="-1">邂逅CSS <a class="header-anchor" href="#邂逅css" aria-label="Permalink to &quot;邂逅CSS&quot;">​</a></h2><h3 id="_2-1-认识css" tabindex="-1">2.1. 认识CSS <a class="header-anchor" href="#_2-1-认识css" aria-label="Permalink to &quot;2.1. 认识CSS&quot;">​</a></h3><ul><li>CSS的概念</li><li>作用: 美化网页 <ul><li>方式一: 添加各种样式;</li><li>方式二: 布局;</li></ul></li><li>历史: <ul><li>CSS3 -&gt; Modules</li></ul></li></ul><h3 id="_2-2-css规则" tabindex="-1">2.2. CSS规则 <a class="header-anchor" href="#_2-2-css规则" aria-label="Permalink to &quot;2.2. CSS规则&quot;">​</a></h3><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">属性名: 属性值</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-3-三种编写规则" tabindex="-1">2.3. 三种编写规则 <a class="header-anchor" href="#_2-3-三种编写规则" aria-label="Permalink to &quot;2.3. 三种编写规则&quot;">​</a></h3><ul><li>内联样式: 在Vue的template中某些动态的样式会使用内联样式</li><li>内部样式: Vue开发中，每个组件都有一个style元素，使用的是内部样式表的方式，不过原理并不相同</li><li>外部样式: 最常用的方式将所有css文件放在一个独立的文件夹中，然后通过link/@import引入到需要的文件中 <ul><li>link</li><li>@import url(路径)</li></ul></li></ul><h3 id="_2-4-css中的注释" tabindex="-1">2.4. CSS中的注释 <a class="header-anchor" href="#_2-4-css中的注释" aria-label="Permalink to &quot;2.4. CSS中的注释&quot;">​</a></h3><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 注释 */</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-5-常见的css" tabindex="-1">2.5. 常见的CSS <a class="header-anchor" href="#_2-5-常见的css" aria-label="Permalink to &quot;2.5. 常见的CSS&quot;">​</a></h3><ul><li>最常见的CSS <ul><li>font-size</li><li>color</li><li>background-color</li><li>width</li><li>height</li></ul></li></ul><h3 id="_2-6-水平排布-了解" tabindex="-1">2.6. 水平排布(了解) <a class="header-anchor" href="#_2-6-水平排布-了解" aria-label="Permalink to &quot;2.6. 水平排布(了解)&quot;">​</a></h3><h2 id="知识点补充" tabindex="-1">知识点补充 <a class="header-anchor" href="#知识点补充" aria-label="Permalink to &quot;知识点补充&quot;">​</a></h2><h3 id="_3-1-link元素" tabindex="-1">3.1. link元素 <a class="header-anchor" href="#_3-1-link元素" aria-label="Permalink to &quot;3.1. link元素&quot;">​</a></h3><ul><li>link链接 站点图标</li><li>dns-prefetch(了解)</li></ul><h3 id="_3-2-进制" tabindex="-1">3.2. 进制 <a class="header-anchor" href="#_3-2-进制" aria-label="Permalink to &quot;3.2. 进制&quot;">​</a></h3><ul><li>人: 十进制</li><li>计算机: 二进制/八进制/十六进制</li></ul><h3 id="_3-3-颜色表示方法" tabindex="-1">3.3. 颜色表示方法 <a class="header-anchor" href="#_3-3-颜色表示方法" aria-label="Permalink to &quot;3.3. 颜色表示方法&quot;">​</a></h3><ul><li>color keywords(颜色关键字)</li><li>RGB ⌈ R(red) G(green) B(blue) A(alpha)⌋ <ul><li>十六进制: #aabbcc;</li><li>缩写: #abc</li><li>函数: rgb(0~255, 0~255, 0~255)</li></ul></li></ul><h3 id="_3-4-chrome调试工具" tabindex="-1">3.4. Chrome调试工具 <a class="header-anchor" href="#_3-4-chrome调试工具" aria-label="Permalink to &quot;3.4. Chrome调试工具&quot;">​</a></h3><h3 id="_3-5-浏览器的渲染流程-这里快速开始篇章有详细的说明" tabindex="-1">3.5. 浏览器的渲染流程 (这里快速开始篇章有详细的说明) <a class="header-anchor" href="#_3-5-浏览器的渲染流程-这里快速开始篇章有详细的说明" aria-label="Permalink to &quot;3.5. 浏览器的渲染流程 (这里快速开始篇章有详细的说明)&quot;">​</a></h3><h2 id="css属性-文本" tabindex="-1">CSS属性 - 文本 <a class="header-anchor" href="#css属性-文本" aria-label="Permalink to &quot;CSS属性 - 文本&quot;">​</a></h2><h3 id="_1-1-text-decoration" tabindex="-1">1.1. text-decoration <a class="header-anchor" href="#_1-1-text-decoration" aria-label="Permalink to &quot;1.1. text-decoration&quot;">​</a></h3><ul><li>装饰线 (不是继承属性)</li><li>常见取值 <ul><li><code>none</code>：无任何装饰线(可以去除a元素默认的下划线)</li><li><code>underline</code>：下划线</li><li><code>overline</code>：上划线</li><li><code>line-through</code>：中划线（删除线）</li></ul></li></ul><ul><li><code>text-decoration</code>属性是一种简写属性，并且可以使用普通属性三个值中的任何一个。普通属性如下： <ul><li><code>text-decoration-line</code>:文本修饰的位置, 如<code>下划线underline</code>，删除线<code>line-through</code></li><li><code>text-decoration-color</code>:文本修饰的颜色</li><li><code>text-decoration-style</code>:文本修饰的样式, 如<code>波浪线wavy</code>、<code>实线solid</code>、<code>虚线dashed</code></li><li><code>text-decoration-thickness</code>:文本修饰线的粗细(<code>px</code>)</li></ul></li><li>a元素有下划线的本质是被添加了<code>text-decoration:underline</code>属性</li><li>一般会建一个reset.css文件 重置浏览器默认添加的样式 如消除a元素下划线<code>text-decoration: none;</code></li></ul><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 红色 波浪 下划线 2px */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">text-decoration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:wavy underline red 2px</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_1-2-text-transform-了解" tabindex="-1">1.2. text-transform(了解) <a class="header-anchor" href="#_1-2-text-transform-了解" aria-label="Permalink to &quot;1.2. text-transform(了解)&quot;">​</a></h3><ul><li>形变</li></ul><ul><li><code>text-transform</code>用于设置文字的大小写转换 (是继承属性)</li><li><code>text-transform</code>有几个常见的值: <ul><li><code>capitalize</code>：(使…首字母大写, 资本化的意思)将每个单词的首字符变为大写</li><li><code>uppercase</code>：(大写字母)将每个单词的所有字符变为大写</li><li><code>lowercase</code>：(小写字母)将每个单词的所有字符变为小写</li><li><code>none</code>：没有任何影响</li></ul></li><li>实际开发中用JavaScript代码转化的更多</li></ul><h3 id="_1-3-text-indent" tabindex="-1">1.3. text-indent <a class="header-anchor" href="#_1-3-text-indent" aria-label="Permalink to &quot;1.3. text-indent&quot;">​</a></h3><ul><li>首行缩进 (是继承属性)</li></ul><ul><li>属性值: <ul><li><code>&lt;length&gt;</code>:使用固定的<code>&lt;length&gt;</code>值来指定文本的缩进。允许使用负值。</li><li><code>&lt;percentage&gt;</code>:使用包含块宽度的百分比作为缩进</li><li><code> each-line(实验中)</code>:文本缩进会影响第一行，以及使用<code>&lt;br&gt;</code>强制断行后的第一行</li></ul></li><li><code>text-indent: 2em</code>:刚好是缩进2个文字;</li></ul><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* &lt;length&gt; 长度值 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">text-indent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 3mm;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">text-indent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 40px;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* &lt;percentage&gt;百分比值取决于其包含块（containing block）的宽度*/</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">text-indent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 15%;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 关键字 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">text-indent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 5em </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">each-line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">text-indent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 5em hanging </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">each-line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_1-4-text-align-重要" tabindex="-1">1.4. text-align(重要) <a class="header-anchor" href="#_1-4-text-align-重要" aria-label="Permalink to &quot;1.4. text-align(重要)&quot;">​</a></h3><ul><li><code>text-align</code>: 直接翻译过来设置文本的水平对齐方式 (是继承属性)(是继承属性)</li><li><code>text-align</code> 并不控制块元素自己的对齐，只控制它的行内内容的对齐</li><li>MDN解释: 定义行内内容（例如文字）如何相对它的块父元素对齐(可以设置图片居中)</li><li>W3C官方文档解释: 设置行内(inline-level)元素(没有填满父元素)在快级父元素的对齐方式</li><li><code>text-align</code>常用的值: <ul><li><code>left</code>：左对齐</li><li><code>right</code>：右对齐</li><li><code>center</code>：正中间显示</li><li><code>justify</code>：对最后一行无效(如果文字只有一行也无效)</li></ul></li><li>直接设置对块级元素(例如<code>&lt;div&gt;</code>)无效 可以更改<code>&lt;div&gt;</code>的<code>display</code>为<code>inline-block</code><ul><li>例如:</li></ul><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 直接设置对快级元素无效*/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    text-align</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 设置为行内元素 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inline-block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li><li>备注:居中一个块元素且不居中它的行内内容的标准兼容的方法是将它的左、右<code>margin</code>设为<code>auto</code>, 例如：<code>margin:auto</code>; 或<code>margin:0 auto</code>; 或<code>margin-left:auto</code>; <code>margin-right:auto</code>;</li></ul><h3 id="_1-5-letter-word-spacing" tabindex="-1">1.5. letter-word-spacing <a class="header-anchor" href="#_1-5-letter-word-spacing" aria-label="Permalink to &quot;1.5. letter-word-spacing&quot;">​</a></h3><ul><li><code>letter-spacing</code>、<code>word-spacing</code>分别用于设置字母、单词之间的间距</li><li>默认是0，可以设置为负数</li></ul><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  letter-spacing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  word-spacing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="css属性-字体" tabindex="-1">CSS属性 - 字体 <a class="header-anchor" href="#css属性-字体" aria-label="Permalink to &quot;CSS属性 - 字体&quot;">​</a></h2><h3 id="_2-1-font-size" tabindex="-1">2.1. font-size <a class="header-anchor" href="#_2-1-font-size" aria-label="Permalink to &quot;2.1. font-size&quot;">​</a></h3><ul><li><code>font-size</code>决定文字的大小(是继承属性)</li><li>属性值: <ul><li><code>&lt;length&gt;</code>: <ul><li>长度值 px(像素) 用像素字体定义使得字体大小不可由用户的浏览器改变 <code>font-size: 30px</code></li><li><code>em</code>: em = 希望得到的像素大小 / 父元素字体像素大小 <code>font-size: 1.5em</code></li></ul></li><li><code>&lt;relative-size&gt;</code>，相对大小值 <ul><li>比父元素的字体大或小，使用与上面的关键字的相近缩放比率</li><li><code>font-size: larger</code>; <code>font-size: smaller</code></li></ul></li><li><code>&lt;percentage&gt;</code>:百分比值 父元素字体大小的百分比:<code>font-size: 80%</code></li></ul></li><li>技巧:设置body元素的字体大小为62.5% (即默认大小16px的62.5%)，等于10px。现在你可以通过计算基准大小10px的倍数，在任何元素上方便的使用em单位。这样有<code>6px = 0.6em</code>, <code>8px = 0.8em</code>, <code>12px = 1.2em</code>等</li></ul><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">62.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: size </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.8</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">em</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;(相当于18</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_2-2-font-family" tabindex="-1">2.2. font-family <a class="header-anchor" href="#_2-2-font-family" aria-label="Permalink to &quot;2.2. font-family&quot;">​</a></h3><ul><li><code>font-family</code>用于设置文字的字体名称 一般仅设置一次(是继承属性)</li><li>可以设置1个或者多个字体名称</li><li>浏览器会选择列表中第一个该计算机上有安装的字体</li><li>或者是通过 @font-face 指定的可以直接下载的字体</li><li>常见的属性: <ul><li><code>serif</code>:带衬线字体，笔画结尾有特殊的装饰线或衬线</li><li><code>sans-serif</code>:无衬线字体，即笔画结尾是平滑的字体</li><li><code>monospace</code>:等宽字体，即字体中每个字宽度相同</li><li><code>cursive</code>:草书字体。这种字体有的有连笔，有的还有特殊的斜体效果</li><li><code>fantasy</code>:Fantasy 字体主要是那些具有特殊艺术效果的字体</li><li><code>system-ui</code>:从浏览器所处平台处获取的默认用户界面字体</li><li><code>math</code>:针对显示数学相关字符的特殊样式问题而设计的字体：支持上标和下标、跨行括号、嵌套表达式和具有不同含义的double struck glyphs</li><li><code>emoji</code>;专门用于呈现 Emoji 表情符号的字体</li><li><code>fangsong</code>:一种汉字字体，介于宋体和楷体之间。这种字体常用于某些政府文件</li></ul></li><li>备注:一般建一个base.css文件确定整个网页的字体</li></ul><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 直接设置body的样式 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-family</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Gill Sans&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sans-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 京东设置的字体 */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* font-family: &quot;Microsoft YaHei&quot;, &quot;Heiti SC&quot;, tahoma, arial, &quot;Hiragino Sans GB&quot;, &quot;\\5B8B\\4F53&quot;, sans-serif; */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li>原理: 读取操作系统 <ul><li>网络字体 <code>@font-face</code>;</li></ul></li><li>1个或者多个值</li></ul><h3 id="_2-3-font-weight" tabindex="-1">2.3. font-weight <a class="header-anchor" href="#_2-3-font-weight" aria-label="Permalink to &quot;2.3. font-weight&quot;">​</a></h3><ul><li><code>font-weight</code>用于设置文字的粗细(重量) (是继承属性)</li><li>属性值: <ul><li><code>normal</code>:正常粗细。与400等值。</li><li><code>bold</code>:加粗。 与700等值</li><li><code>lighter</code>:比从父元素继承来的值更细(处在字体可行的粗细值范围内)(规则:父元素1-500 lighter=100 父元素600-700 lighter=400 父元素800-900 lighter=700)</li><li><code>bolder</code>;比从父元素继承来的值更粗 (处在字体可行的粗细值范围内)(规则:父元素1-300 bolder=400 父元素400-500 bolder=700 父元素600-900 bolder=900)</li><li><code>&lt;number&gt;</code>:一个介于 <code>1</code> 和 <code>1000</code> (包含) 之间的 <code>&lt;number&gt;</code> 类型值</li></ul></li><li>如果一个字体只有 <code>normal</code> 和 <code>bold</code> 两种粗细值选择，指定粗细值为 100-500 时，实际渲染时将使用 <code>normal</code>，指定粗细值为 600-900 时，实际渲染时将使用 <code>bold</code></li></ul><h3 id="_2-4-font-style" tabindex="-1">2.4. font-style <a class="header-anchor" href="#_2-4-font-style" aria-label="Permalink to &quot;2.4. font-style&quot;">​</a></h3><ul><li><code>font-style</code>用于设置文字的常规、斜体显示 (是继承属性)</li><li>属性值: <ul><li><code>normal</code>:常规显示</li><li><code>italic</code>(斜体):用字体的斜体显示(通常会有专门的字体)</li><li><code>oblique</code>(倾斜):文本倾斜显示(仅仅是让文字倾斜)</li></ul></li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  /* oblique，可附加一个可选的角度 */</span></span>
<span class="line"><span>  font-style: oblique 20deg;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_2-5-font-varient" tabindex="-1">2.5. font-varient <a class="header-anchor" href="#_2-5-font-varient" aria-label="Permalink to &quot;2.5. font-varient&quot;">​</a></h3><ul><li>小写字母以大写显示, 但是高度保持小写的高度</li></ul><ul><li>属性值: <ul><li><code>normal</code>:常规显示</li><li><code>small-caps</code>:将小写字母替换为缩小过的大写字母</li></ul></li><li>例子: <code>font-variant: small-caps</code></li></ul><h3 id="_2-6-line-height" tabindex="-1">2.6. line-height <a class="header-anchor" href="#_2-6-line-height" aria-label="Permalink to &quot;2.6. line-height&quot;">​</a></h3><ul><li>两个基线(baseline)距离</li><li>一行文本 -&gt; line-height</li><li>行高 - 文本高度 = 行距</li></ul><h3 id="_2-7-font缩写属性" tabindex="-1">2.7. font缩写属性 <a class="header-anchor" href="#_2-7-font缩写属性" aria-label="Permalink to &quot;2.7. font缩写属性&quot;">​</a></h3><ul><li>font-size/line-height font-family;</li></ul><h2 id="css选择器" tabindex="-1">CSS选择器 <a class="header-anchor" href="#css选择器" aria-label="Permalink to &quot;CSS选择器&quot;">​</a></h2><h3 id="_3-1-统配选择器" tabindex="-1">3.1. 统配选择器 * <a class="header-anchor" href="#_3-1-统配选择器" aria-label="Permalink to &quot;3.1. 统配选择器 *&quot;">​</a></h3><h3 id="_3-2-简单选择器-重要" tabindex="-1">3.2. 简单选择器(重要) <a class="header-anchor" href="#_3-2-简单选择器-重要" aria-label="Permalink to &quot;3.2. 简单选择器(重要)&quot;">​</a></h3><ul><li>元素 div</li><li>类 .class</li><li>id #id</li></ul><h3 id="_3-3-属性选择器" tabindex="-1">3.3. 属性选择器 <a class="header-anchor" href="#_3-3-属性选择器" aria-label="Permalink to &quot;3.3. 属性选择器&quot;">​</a></h3><ul><li>[att]</li><li>[att=val]</li></ul><h3 id="_3-4-后代选择器-重要" tabindex="-1">3.4. 后代选择器(重要) <a class="header-anchor" href="#_3-4-后代选择器-重要" aria-label="Permalink to &quot;3.4. 后代选择器(重要)&quot;">​</a></h3><ul><li>全后代选择器 <ul><li>直接/间接</li><li>以空格分隔</li></ul></li><li>直接后台选择器 <ul><li>必须直接</li><li><code>&gt;</code>符号</li></ul></li></ul><h3 id="_3-5-兄弟选择器" tabindex="-1">3.5. 兄弟选择器 <a class="header-anchor" href="#_3-5-兄弟选择器" aria-label="Permalink to &quot;3.5. 兄弟选择器&quot;">​</a></h3><ul><li>相邻兄弟 +</li><li>普遍兄弟(后面) ~</li></ul><h3 id="_3-6-选择器组-重要" tabindex="-1">3.6. 选择器组(重要) <a class="header-anchor" href="#_3-6-选择器组-重要" aria-label="Permalink to &quot;3.6. 选择器组(重要)&quot;">​</a></h3><ul><li>交集选择器 <ul><li>div.box</li><li>既是一个div, 也必须有一个class为box</li></ul></li><li>并集选择器 <ul><li>div, p, h1 {}</li></ul></li></ul><h3 id="_3-7-伪类" tabindex="-1">3.7. 伪类 <a class="header-anchor" href="#_3-7-伪类" aria-label="Permalink to &quot;3.7. 伪类&quot;">​</a></h3><ul><li>伪类的由来(概念)</li><li>动态伪类 <ul><li>hover</li><li>了解 <ul><li>link</li><li>visited</li><li>focus</li><li>hover</li><li>active</li></ul></li></ul></li></ul>`,142)]))}const k=a(n,[["render",t]]);export{u as __pageData,k as default};
